{"ast":null,"code":"import _slicedToArray from\"E:/ReactProjects/portfolio/my-project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function TypingAnimation(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var messages=[props.text];var typingSpeed=100;// Speed in milliseconds between each character\nuseEffect(function(){var currentIndex=0;var currentMessageIndex=0;var intervalId=setInterval(function(){if(currentIndex<=messages[currentMessageIndex].length){setText(messages[currentMessageIndex].slice(0,currentIndex));currentIndex++;}else{setTimeout(function(){currentIndex=0;currentMessageIndex=(currentMessageIndex+1)%messages.length;},1000);// Wait for 1 second before clearing text and moving to the next message\n}},typingSpeed);return function(){return clearInterval(intervalId);};},[]);return/*#__PURE__*/_jsx(_Fragment,{children:text});}export default TypingAnimation;","map":{"version":3,"names":["React","useState","useEffect","Fragment","_Fragment","jsx","_jsx","TypingAnimation","props","_useState","_useState2","_slicedToArray","text","setText","messages","typingSpeed","currentIndex","currentMessageIndex","intervalId","setInterval","length","slice","setTimeout","clearInterval","children"],"sources":["E:/ReactProjects/portfolio/my-project/src/Text.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction TypingAnimation(props) {\r\n  const [text, setText] = useState('');\r\n  const messages = [props.text];\r\n  const typingSpeed = 100; // Speed in milliseconds between each character\r\n\r\n  useEffect(() => {\r\n    let currentIndex = 0;\r\n    let currentMessageIndex = 0;\r\n\r\n    const intervalId = setInterval(() => {\r\n      if (currentIndex <= messages[currentMessageIndex].length) {\r\n        setText(messages[currentMessageIndex].slice(0, currentIndex));\r\n        currentIndex++;\r\n      } else {\r\n        setTimeout(() => {\r\n          currentIndex = 0;\r\n          currentMessageIndex = (currentMessageIndex + 1) % messages.length;\r\n        }, 1000); // Wait for 1 second before clearing text and moving to the next message\r\n      }\r\n    }, typingSpeed);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n      <>{text}</>\r\n  );\r\n}\r\n\r\nexport default TypingAnimation;\r\n"],"mappings":"2HAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,QAAA,IAAAC,SAAA,gCAAAC,GAAA,IAAAC,IAAA,yBAEnD,QAAS,CAAAC,eAAeA,CAACC,KAAK,CAAE,CAC9B,IAAAC,SAAA,CAAwBR,QAAQ,CAAC,EAAE,CAAC,CAAAS,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,GAAM,CAAAI,QAAQ,CAAG,CAACN,KAAK,CAACI,IAAI,CAAC,CAC7B,GAAM,CAAAG,WAAW,CAAG,GAAG,CAAE;AAEzBb,SAAS,CAAC,UAAM,CACd,GAAI,CAAAc,YAAY,CAAG,CAAC,CACpB,GAAI,CAAAC,mBAAmB,CAAG,CAAC,CAE3B,GAAM,CAAAC,UAAU,CAAGC,WAAW,CAAC,UAAM,CACnC,GAAIH,YAAY,EAAIF,QAAQ,CAACG,mBAAmB,CAAC,CAACG,MAAM,CAAE,CACxDP,OAAO,CAACC,QAAQ,CAACG,mBAAmB,CAAC,CAACI,KAAK,CAAC,CAAC,CAAEL,YAAY,CAAC,CAAC,CAC7DA,YAAY,EAAE,CAChB,CAAC,IAAM,CACLM,UAAU,CAAC,UAAM,CACfN,YAAY,CAAG,CAAC,CAChBC,mBAAmB,CAAG,CAACA,mBAAmB,CAAG,CAAC,EAAIH,QAAQ,CAACM,MAAM,CACnE,CAAC,CAAE,IAAI,CAAC,CAAE;AACZ,CACF,CAAC,CAAEL,WAAW,CAAC,CAEf,MAAO,kBAAM,CAAAQ,aAAa,CAACL,UAAU,CAAC,GACxC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIZ,IAAA,CAAAF,SAAA,EAAAoB,QAAA,CAAGZ,IAAI,CAAG,CAAC,CAEjB,CAEA,cAAe,CAAAL,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}