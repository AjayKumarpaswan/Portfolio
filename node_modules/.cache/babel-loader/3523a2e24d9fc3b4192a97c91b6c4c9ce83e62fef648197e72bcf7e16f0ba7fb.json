{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactProjects\\\\portfolio\\\\my-project\\\\src\\\\Text.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TypingAnimation() {\n  _s();\n  const [text, setText] = useState('');\n  const messages = ['Hello, ', 'Welcome to ', 'My Website!'];\n  const typingSpeed = 120; // Speed in milliseconds between each character\n\n  useEffect(() => {\n    let currentIndex = 0;\n    let currentMessageIndex = 0;\n    const intervalId = setInterval(() => {\n      if (currentIndex <= messages[currentMessageIndex].length) {\n        setText(messages[currentMessageIndex].slice(0, currentIndex));\n        currentIndex++;\n      } else {\n        setTimeout(() => {\n          currentIndex = 0;\n          currentMessageIndex = (currentMessageIndex + 1) % messages.length;\n        }, 1000); // Wait for 1 second before clearing text and moving to the next message\n      }\n    }, typingSpeed);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(TypingAnimation, \"4ujWDM02ns4tez/JXYjL1bw6ipA=\");\n_c = TypingAnimation;\nexport default TypingAnimation;\nvar _c;\n$RefreshReg$(_c, \"TypingAnimation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TypingAnimation","_s","text","setText","messages","typingSpeed","currentIndex","currentMessageIndex","intervalId","setInterval","length","slice","setTimeout","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/ReactProjects/portfolio/my-project/src/Text.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction TypingAnimation() {\r\n  const [text, setText] = useState('');\r\n  const messages = ['Hello, ', 'Welcome to ', 'My Website!'];\r\n  const typingSpeed = 120; // Speed in milliseconds between each character\r\n\r\n  useEffect(() => {\r\n    let currentIndex = 0;\r\n    let currentMessageIndex = 0;\r\n\r\n    const intervalId = setInterval(() => {\r\n      if (currentIndex <= messages[currentMessageIndex].length) {\r\n        setText(messages[currentMessageIndex].slice(0, currentIndex));\r\n        currentIndex++;\r\n      } else {\r\n        setTimeout(() => {\r\n          currentIndex = 0;\r\n          currentMessageIndex = (currentMessageIndex + 1) % messages.length;\r\n        }, 1000); // Wait for 1 second before clearing text and moving to the next message\r\n      }\r\n    }, typingSpeed);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p>{text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TypingAnimation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMQ,QAAQ,GAAG,CAAC,SAAS,EAAE,aAAa,EAAE,aAAa,CAAC;EAC1D,MAAMC,WAAW,GAAG,GAAG,CAAC,CAAC;;EAEzBR,SAAS,CAAC,MAAM;IACd,IAAIS,YAAY,GAAG,CAAC;IACpB,IAAIC,mBAAmB,GAAG,CAAC;IAE3B,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,IAAIH,YAAY,IAAIF,QAAQ,CAACG,mBAAmB,CAAC,CAACG,MAAM,EAAE;QACxDP,OAAO,CAACC,QAAQ,CAACG,mBAAmB,CAAC,CAACI,KAAK,CAAC,CAAC,EAAEL,YAAY,CAAC,CAAC;QAC7DA,YAAY,EAAE;MAChB,CAAC,MAAM;QACLM,UAAU,CAAC,MAAM;UACfN,YAAY,GAAG,CAAC;UAChBC,mBAAmB,GAAG,CAACA,mBAAmB,GAAG,CAAC,IAAIH,QAAQ,CAACM,MAAM;QACnE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ;IACF,CAAC,EAAEL,WAAW,CAAC;IAEf,OAAO,MAAMQ,aAAa,CAACL,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAAe,QAAA,eACEf,OAAA;MAAAe,QAAA,EAAIZ;IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACjB,EAAA,CA7BQD,eAAe;AAAAmB,EAAA,GAAfnB,eAAe;AA+BxB,eAAeA,eAAe;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}